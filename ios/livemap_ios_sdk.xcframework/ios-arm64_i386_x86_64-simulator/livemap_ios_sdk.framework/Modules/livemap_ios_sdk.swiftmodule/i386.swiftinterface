// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target i386-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name livemap_ios_sdk
import AVFoundation
import Foundation
import Swift
import UIKit
import WebKit
import _Concurrency
@_exported import livemap_ios_sdk
@objc public protocol WemapSDKMapActionsDelegate {
  @objc optional func regionDidChanged(controller: livemap_ios_sdk.wemapsdk)
  @objc optional func openPinpoint(controller: livemap_ios_sdk.wemapsdk)
  @objc optional func openList(controller: livemap_ios_sdk.wemapsdk)
  @objc optional func bookEvent(controller: livemap_ios_sdk.wemapsdk)
  @objc optional func sharePinpoint(controller: livemap_ios_sdk.wemapsdk)
  @objc optional func shareMap(controller: livemap_ios_sdk.wemapsdk)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class CustomARView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) public func set(isHidden: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public func set(webMapView: WebKit.WKWebView)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @objc deinit
}
@objc public protocol wemapsdkViewDelegate {
  @objc optional func waitForReady(_ wemapController: livemap_ios_sdk.wemapsdk)
  @objc optional func onEventOpen(_ wemapController: livemap_ios_sdk.wemapsdk, event: livemap_ios_sdk.WemapEvent)
  @objc optional func onPinpointOpen(_ wemapController: livemap_ios_sdk.wemapsdk, pinpoint: livemap_ios_sdk.WemapPinpoint)
  @objc optional func onEventClose(_ wemapController: livemap_ios_sdk.wemapsdk)
  @objc optional func onPinpointClose(_ wemapController: livemap_ios_sdk.wemapsdk)
  @objc optional func onGuidingStarted(_ wemapController: livemap_ios_sdk.wemapsdk)
  @objc optional func onGuidingStopped(_ wemapController: livemap_ios_sdk.wemapsdk)
  @objc optional func onUserLogin(_ wemapController: livemap_ios_sdk.wemapsdk)
  @objc optional func onUserLogout(_ wemapController: livemap_ios_sdk.wemapsdk)
  @objc optional func onUrlChange(_ wemapController: livemap_ios_sdk.wemapsdk, previousUrl: Swift.String, nextUrl: Swift.String)
  @objc optional func onBookEventClicked(_ wemapController: livemap_ios_sdk.wemapsdk, event: livemap_ios_sdk.WemapEvent)
  @objc optional func onGoToPinpointClicked(_ wemapController: livemap_ios_sdk.wemapsdk, pinpoint: livemap_ios_sdk.WemapPinpoint)
}
@objc public class WemapEvent : ObjectiveC.NSObject {
  final public let id: Swift.Int
  final public let name: Swift.String
  final public let eventDescription: Swift.String
  final public let pinpoint: livemap_ios_sdk.WemapPinpoint?
  final public let external_data: Foundation.NSDictionary?
  public init(_ json: Foundation.NSDictionary)
  @objc deinit
}
@objc public class WemapPinpoint : ObjectiveC.NSObject {
  final public let data: Foundation.NSDictionary
  final public let id: Swift.Int
  final public let longitude: Swift.Double
  final public let latitude: Swift.Double
  final public let name: Swift.String
  final public let pinpointDescription: Swift.String
  final public let external_data: Foundation.NSDictionary?
  public init(_ json: Foundation.NSDictionary)
  public func toJson() -> Foundation.Data?
  public func toJsonString() -> Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class wemapsdk : UIKit.UIView, WebKit.WKUIDelegate {
  @_Concurrency.MainActor(unsafe) public static let sharedInstance: livemap_ios_sdk.wemapsdk
  @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  @_Concurrency.MainActor(unsafe) weak open var delegate: livemap_ios_sdk.wemapsdkViewDelegate?
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @objc deinit
}
extension livemap_ios_sdk.wemapsdk : WebKit.WKNavigationDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic open func webView(_ webView: WebKit.WKWebView, didFinish navigation: WebKit.WKNavigation!)
  @_Concurrency.MainActor(unsafe) @objc dynamic open func webView(_ webView: WebKit.WKWebView, didFail navigation: WebKit.WKNavigation!, withError error: Swift.Error)
}
extension livemap_ios_sdk.wemapsdk {
  @_Concurrency.MainActor(unsafe) public func configure(config: livemap_ios_sdk.wemapsdk_config) -> livemap_ios_sdk.wemapsdk
  @_Concurrency.MainActor(unsafe) public func presentIn(view: UIKit.UIView) -> livemap_ios_sdk.wemapsdk
  @_Concurrency.MainActor(unsafe) public func loadMapUrl()
}
extension livemap_ios_sdk.wemapsdk : WebKit.WKScriptMessageHandler {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
}
extension livemap_ios_sdk.wemapsdk {
  @_Concurrency.MainActor(unsafe) public func waitForReady()
  @_Concurrency.MainActor(unsafe) public func openEvent(WemapEventId id: Swift.Int)
  @_Concurrency.MainActor(unsafe) public func closeEvent()
  @_Concurrency.MainActor(unsafe) public func openPinpoint(WemapPinpointId id: Swift.Int)
  @_Concurrency.MainActor(unsafe) public func closePinpoint()
  @_Concurrency.MainActor(unsafe) public func setPinpoints(WemapPinpoints pinpoints: [livemap_ios_sdk.WemapPinpoint])
  @_Concurrency.MainActor(unsafe) public func setFilters(WemapFilters: livemap_ios_sdk.WemapFilters)
  @_Concurrency.MainActor(unsafe) public func navigateToPinpoint(WemapPinpointId id: Swift.Int, location: livemap_ios_sdk.WemapLocation? = nil, heading: Swift.Int? = nil)
  @_Concurrency.MainActor(unsafe) public func stopNavigation()
  @_Concurrency.MainActor(unsafe) public func signInByToken(accessToken: Swift.String, refreshToken: Swift.String)
  @_Concurrency.MainActor(unsafe) public func enableSidebar()
  @_Concurrency.MainActor(unsafe) public func disableSidebar()
}
public struct WemapFilters : Swift.Codable {
  public init(tags: Swift.Array<Swift.String>? = nil, query: Swift.String? = nil, startDate: Swift.String? = nil, endDate: Swift.String? = nil)
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public struct WemapLocation : Swift.Codable {
  public init(longitude: Swift.Double, latitude: Swift.Double)
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public struct wemapsdk_config {
  public init(token: Swift.String?, mapId: Swift.Int? = nil, livemapRootUrl: Swift.String? = nil)
  public static let defaultLivemapRootUrl: Swift.String
  public let token: Swift.String
  public let emmid: Swift.Int
  public var ufe: Swift.Bool
  public let livemapRootUrl: Swift.String
}
