#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef LIVEMAP_IOS_SDK_SWIFT_H
#define LIVEMAP_IOS_SDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="livemap_ios_sdk",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC15livemap_ios_sdk4JSON")
@interface JSON : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15livemap_ios_sdk11BoundingBox")
@interface BoundingBox : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15livemap_ios_sdk19ContentUpdatedQuery")
@interface ContentUpdatedQuery : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15livemap_ios_sdk11Coordinates")
@interface Coordinates : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCoder;

SWIFT_CLASS("_TtC15livemap_ios_sdk12CustomARView")
@interface CustomARView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC15livemap_ios_sdk18IntroCardParameter")
@interface IntroCardParameter : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC15livemap_ios_sdk8MapMoved")
@interface MapMoved : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15livemap_ios_sdk15PolylineOptions")
@interface PolylineOptions : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Create a Wemap Event
SWIFT_CLASS("_TtC15livemap_ios_sdk10WemapEvent")
@interface WemapEvent : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Create a Wemap Pinpoint
SWIFT_CLASS("_TtC15livemap_ios_sdk13WemapPinpoint")
@interface WemapPinpoint : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class wemapsdk;

/// WemapSDKMapDelegate used to pass notifictons about user actions on map.
/// All notifications will be sent in background queue and this is optional to implement handling all of them.
SWIFT_PROTOCOL("_TtP15livemap_ios_sdk26WemapSDKMapActionsDelegate_")
@protocol WemapSDKMapActionsDelegate
@optional
/// Notify user moved map to specified region.
/// \param region an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
- (void)regionDidChangedWithController:(wemapsdk * _Nonnull)controller;
/// Notify user moved map to specified region.
/// \param controller an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
/// \param pinpoint a touched WemapPinpoint object.
///
- (void)openPinpointWithController:(wemapsdk * _Nonnull)controller;
/// Notify user moved map to specified region.
/// \param controller an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
/// \param list an opened WemapList object.
///
- (void)openListWithController:(wemapsdk * _Nonnull)controller;
/// Notify user booked event or event added to user calendar.
/// \param controller an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
/// \param event a WemapEvent object.
///
- (void)bookEventWithController:(wemapsdk * _Nonnull)controller;
/// Notify user moved map to specified region.
/// \param controller an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
/// \param pinpoint a shared WemapPinpoint object.
///
- (void)sharePinpointWithController:(wemapsdk * _Nonnull)controller;
/// Notify user moved map to specified region.
/// \param controller an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
/// \param map an touched WemapPinpoint object.
///
- (void)shareMapWithController:(wemapsdk * _Nonnull)controller;
@end

@class NSString;

SWIFT_CLASS("_TtC15livemap_ios_sdk8wemapsdk")
@interface wemapsdk : UIView <WKUIDelegate>
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end

@class WKUserContentController;
@class WKScriptMessage;

@interface wemapsdk (SWIFT_EXTENSION(livemap_ios_sdk)) <WKScriptMessageHandler>
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
@end

@class WKWebView;
@class WKNavigation;

@interface wemapsdk (SWIFT_EXTENSION(livemap_ios_sdk)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
@end




SWIFT_PROTOCOL("_TtP15livemap_ios_sdk20wemapsdkViewDelegate_")
@protocol wemapsdkViewDelegate
@optional
- (void)waitForReady:(wemapsdk * _Nonnull)wemapController;
- (void)onEventOpen:(wemapsdk * _Nonnull)wemapController event:(WemapEvent * _Nonnull)event;
- (void)onPinpointOpen:(wemapsdk * _Nonnull)wemapController pinpoint:(WemapPinpoint * _Nonnull)pinpoint;
- (void)onEventClose:(wemapsdk * _Nonnull)wemapController;
- (void)onPinpointClose:(wemapsdk * _Nonnull)wemapController;
- (void)onGuidingStarted:(wemapsdk * _Nonnull)wemapController;
- (void)onGuidingStopped:(wemapsdk * _Nonnull)wemapController;
- (void)onUserLogin:(wemapsdk * _Nonnull)wemapController;
- (void)onUserLogout:(wemapsdk * _Nonnull)wemapController;
- (void)onUrlChange:(wemapsdk * _Nonnull)wemapController previousUrl:(NSString * _Nonnull)previousUrl nextUrl:(NSString * _Nonnull)nextUrl;
- (void)onActionButtonClick:(wemapsdk * _Nonnull)wemapController pinpoint:(WemapPinpoint * _Nonnull)pinpoint actionType:(NSString * _Nonnull)actionType;
- (void)onActionButtonClick:(wemapsdk * _Nonnull)wemapController event:(WemapEvent * _Nonnull)event actionType:(NSString * _Nonnull)actionType;
- (void)onContentUpdated:(wemapsdk * _Nonnull)wemapController events:(NSArray<WemapEvent *> * _Nonnull)events contentUpdatedQuery:(ContentUpdatedQuery * _Nonnull)contentUpdatedQuery;
- (void)onContentUpdated:(wemapsdk * _Nonnull)wemapController pinpoints:(NSArray<WemapPinpoint *> * _Nonnull)pinpoints contentUpdatedQuery:(ContentUpdatedQuery * _Nonnull)contentUpdatedQuery;
- (void)onPolylineDrawn:(wemapsdk * _Nonnull)wemapController id:(NSString * _Nonnull)id;
- (void)onBookEventClicked:(wemapsdk * _Nonnull)wemapController event:(WemapEvent * _Nonnull)event;
- (void)onGoToPinpointClicked:(wemapsdk * _Nonnull)wemapController pinpoint:(WemapPinpoint * _Nonnull)pinpoint;
- (void)onMapMoved:(wemapsdk * _Nonnull)wemapController mapMoved:(MapMoved * _Nonnull)mapMoved;
- (void)onMapClick:(wemapsdk * _Nonnull)wemapController coordinates:(Coordinates * _Nonnull)coordinates;
- (void)onMapLongClick:(wemapsdk * _Nonnull)wemapController coordinates:(Coordinates * _Nonnull)coordinates;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef LIVEMAP_IOS_SDK_SWIFT_H
#define LIVEMAP_IOS_SDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="livemap_ios_sdk",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC15livemap_ios_sdk4JSON")
@interface JSON : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15livemap_ios_sdk11BoundingBox")
@interface BoundingBox : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15livemap_ios_sdk19ContentUpdatedQuery")
@interface ContentUpdatedQuery : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15livemap_ios_sdk11Coordinates")
@interface Coordinates : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCoder;

SWIFT_CLASS("_TtC15livemap_ios_sdk12CustomARView")
@interface CustomARView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC15livemap_ios_sdk18IntroCardParameter")
@interface IntroCardParameter : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC15livemap_ios_sdk8MapMoved")
@interface MapMoved : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15livemap_ios_sdk15PolylineOptions")
@interface PolylineOptions : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Create a Wemap Event
SWIFT_CLASS("_TtC15livemap_ios_sdk10WemapEvent")
@interface WemapEvent : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Create a Wemap Pinpoint
SWIFT_CLASS("_TtC15livemap_ios_sdk13WemapPinpoint")
@interface WemapPinpoint : JSON
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class wemapsdk;

/// WemapSDKMapDelegate used to pass notifictons about user actions on map.
/// All notifications will be sent in background queue and this is optional to implement handling all of them.
SWIFT_PROTOCOL("_TtP15livemap_ios_sdk26WemapSDKMapActionsDelegate_")
@protocol WemapSDKMapActionsDelegate
@optional
/// Notify user moved map to specified region.
/// \param region an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
- (void)regionDidChangedWithController:(wemapsdk * _Nonnull)controller;
/// Notify user moved map to specified region.
/// \param controller an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
/// \param pinpoint a touched WemapPinpoint object.
///
- (void)openPinpointWithController:(wemapsdk * _Nonnull)controller;
/// Notify user moved map to specified region.
/// \param controller an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
/// \param list an opened WemapList object.
///
- (void)openListWithController:(wemapsdk * _Nonnull)controller;
/// Notify user booked event or event added to user calendar.
/// \param controller an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
/// \param event a WemapEvent object.
///
- (void)bookEventWithController:(wemapsdk * _Nonnull)controller;
/// Notify user moved map to specified region.
/// \param controller an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
/// \param pinpoint a shared WemapPinpoint object.
///
- (void)sharePinpointWithController:(wemapsdk * _Nonnull)controller;
/// Notify user moved map to specified region.
/// \param controller an WemapSDKMapBaseViewController object of map view controller.
/// Could be sublassed to WemapSDKMapViewController or WemapSDKMapKitViewController, depends on type of map which you used.
///
/// \param map an touched WemapPinpoint object.
///
- (void)shareMapWithController:(wemapsdk * _Nonnull)controller;
@end

@class NSString;

SWIFT_CLASS("_TtC15livemap_ios_sdk8wemapsdk")
@interface wemapsdk : UIView <WKUIDelegate>
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end

@class WKUserContentController;
@class WKScriptMessage;

@interface wemapsdk (SWIFT_EXTENSION(livemap_ios_sdk)) <WKScriptMessageHandler>
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
@end

@class WKWebView;
@class WKNavigation;

@interface wemapsdk (SWIFT_EXTENSION(livemap_ios_sdk)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
@end




SWIFT_PROTOCOL("_TtP15livemap_ios_sdk20wemapsdkViewDelegate_")
@protocol wemapsdkViewDelegate
@optional
- (void)waitForReady:(wemapsdk * _Nonnull)wemapController;
- (void)onEventOpen:(wemapsdk * _Nonnull)wemapController event:(WemapEvent * _Nonnull)event;
- (void)onPinpointOpen:(wemapsdk * _Nonnull)wemapController pinpoint:(WemapPinpoint * _Nonnull)pinpoint;
- (void)onEventClose:(wemapsdk * _Nonnull)wemapController;
- (void)onPinpointClose:(wemapsdk * _Nonnull)wemapController;
- (void)onGuidingStarted:(wemapsdk * _Nonnull)wemapController;
- (void)onGuidingStopped:(wemapsdk * _Nonnull)wemapController;
- (void)onUserLogin:(wemapsdk * _Nonnull)wemapController;
- (void)onUserLogout:(wemapsdk * _Nonnull)wemapController;
- (void)onUrlChange:(wemapsdk * _Nonnull)wemapController previousUrl:(NSString * _Nonnull)previousUrl nextUrl:(NSString * _Nonnull)nextUrl;
- (void)onActionButtonClick:(wemapsdk * _Nonnull)wemapController pinpoint:(WemapPinpoint * _Nonnull)pinpoint actionType:(NSString * _Nonnull)actionType;
- (void)onActionButtonClick:(wemapsdk * _Nonnull)wemapController event:(WemapEvent * _Nonnull)event actionType:(NSString * _Nonnull)actionType;
- (void)onContentUpdated:(wemapsdk * _Nonnull)wemapController events:(NSArray<WemapEvent *> * _Nonnull)events contentUpdatedQuery:(ContentUpdatedQuery * _Nonnull)contentUpdatedQuery;
- (void)onContentUpdated:(wemapsdk * _Nonnull)wemapController pinpoints:(NSArray<WemapPinpoint *> * _Nonnull)pinpoints contentUpdatedQuery:(ContentUpdatedQuery * _Nonnull)contentUpdatedQuery;
- (void)onPolylineDrawn:(wemapsdk * _Nonnull)wemapController id:(NSString * _Nonnull)id;
- (void)onBookEventClicked:(wemapsdk * _Nonnull)wemapController event:(WemapEvent * _Nonnull)event;
- (void)onGoToPinpointClicked:(wemapsdk * _Nonnull)wemapController pinpoint:(WemapPinpoint * _Nonnull)pinpoint;
- (void)onMapMoved:(wemapsdk * _Nonnull)wemapController mapMoved:(MapMoved * _Nonnull)mapMoved;
- (void)onMapClick:(wemapsdk * _Nonnull)wemapController coordinates:(Coordinates * _Nonnull)coordinates;
- (void)onMapLongClick:(wemapsdk * _Nonnull)wemapController coordinates:(Coordinates * _Nonnull)coordinates;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
